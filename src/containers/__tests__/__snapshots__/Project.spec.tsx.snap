// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Project should render an error if an invalid projectId is provided 1`] = `
<Provider
  rootStore={
    RootStore {
      "entryListStore": EntryListStore {
        "active": null,
        "entries": Array [],
        "rootStore": [Circular],
      },
      "projectListStore": ProjectListStore {
        "projects": Array [],
        "rootStore": [Circular],
      },
      "repository": FirebaseRepository {
        "app": Object {
          "database": [Function],
        },
        "authenticate": [Function],
        "config": Object {
          "apiKey": "AIzaSyAcZ4DuQNJdoPhUgx542ra5Rf2Q7cezxHI",
          "authDomain": "mobx-time-tracking-cbeca.firebaseapp.com",
          "databaseURL": "https://mobx-time-tracking-cbeca.firebaseio.com",
          "messagingSenderId": "282276589695",
          "storageBucket": "mobx-time-tracking-cbeca.appspot.com",
        },
      },
      "routerStore": RouterStore {
        "instance": Object {
          "add": [Function],
          "addEventListener": [Function],
          "addListener": [Function],
          "addNode": [Function],
          "addNodeListener": [Function],
          "addRouteListener": [Function],
          "areStatesDescendants": [Function],
          "areStatesEqual": [Function],
          "buildPath": [Function],
          "buildState": [Function],
          "buildUrl": [Function],
          "canActivate": [Function],
          "canDeactivate": [Function],
          "cancel": [Function],
          "clearCanDeactivate": [Function],
          "clearMiddleware": [Function],
          "clone": [Function],
          "executeFactory": [Function],
          "getDependencies": [Function],
          "getLifecycleFactories": [Function],
          "getLifecycleFunctions": [Function],
          "getListeners": [Function],
          "getMiddlewareFactories": [Function],
          "getMiddlewareFunctions": [Function],
          "getOptions": [Function],
          "getPlugins": [Function],
          "getState": [Function],
          "hasPlugin": [Function],
          "invokeEventListeners": [Function],
          "isActive": [Function],
          "isStarted": [Function],
          "makeNotFoundState": [Function],
          "makeState": [Function],
          "matchPath": [Function],
          "matchUrl": [Function],
          "navigate": [Function],
          "navigateToDefault": [Function],
          "removeEventListener": [Function],
          "removeListener": [Function],
          "removeNodeListener": [Function],
          "removeRouteListener": [Function],
          "replaceHistoryState": [Function],
          "rootNode": RouteNode {
            "absolute": false,
            "children": Array [
              RouteNode {
                "absolute": false,
                "children": Array [],
                "name": "PROJECT_NEW",
                "parent": [Circular],
                "parser": Path {
                  "hasMatrixParams": false,
                  "hasQueryParams": false,
                  "hasSpatParam": false,
                  "hasUrlParams": false,
                  "params": Array [],
                  "path": "/project/new",
                  "queryParams": Array [],
                  "queryParamsBr": Array [],
                  "source": "\\\\/project\\\\/new",
                  "spatParams": Array [],
                  "tokens": Array [
                    Object {
                      "match": "/",
                      "otherVal": Array [],
                      "regex": /\\\\//,
                      "type": "delimiter",
                      "val": Array [
                        "/",
                      ],
                    },
                    Object {
                      "match": "project",
                      "otherVal": Array [],
                      "regex": /project/,
                      "type": "fragment",
                      "val": Array [
                        "project",
                      ],
                    },
                    Object {
                      "match": "/",
                      "otherVal": Array [],
                      "regex": /\\\\//,
                      "type": "delimiter",
                      "val": Array [
                        "/",
                      ],
                    },
                    Object {
                      "match": "new",
                      "otherVal": Array [],
                      "regex": /new/,
                      "type": "fragment",
                      "val": Array [
                        "new",
                      ],
                    },
                  ],
                  "urlParams": Array [],
                },
                "path": "/project/new",
              },
              RouteNode {
                "absolute": false,
                "children": Array [],
                "name": "PROJECT_OVERVIEW",
                "parent": [Circular],
                "parser": Path {
                  "hasMatrixParams": false,
                  "hasQueryParams": false,
                  "hasSpatParam": false,
                  "hasUrlParams": true,
                  "params": Array [
                    "projectId",
                  ],
                  "path": "/project/:projectId",
                  "queryParams": Array [],
                  "queryParamsBr": Array [],
                  "source": "\\\\/project\\\\/([a-zA-Z0-9-_.~%':]+)",
                  "spatParams": Array [],
                  "tokens": Array [
                    Object {
                      "match": "/",
                      "otherVal": Array [],
                      "regex": /\\\\//,
                      "type": "delimiter",
                      "val": Array [
                        "/",
                      ],
                    },
                    Object {
                      "match": "project",
                      "otherVal": Array [],
                      "regex": /project/,
                      "type": "fragment",
                      "val": Array [
                        "project",
                      ],
                    },
                    Object {
                      "match": "/",
                      "otherVal": Array [],
                      "regex": /\\\\//,
                      "type": "delimiter",
                      "val": Array [
                        "/",
                      ],
                    },
                    Object {
                      "match": ":projectId",
                      "otherVal": Array [
                        undefined,
                        undefined,
                      ],
                      "regex": /\\(\\[a-zA-Z0-9-_\\.~%':\\]\\+\\)/,
                      "type": "url-parameter",
                      "val": Array [
                        "projectId",
                      ],
                    },
                  ],
                  "urlParams": Array [
                    "projectId",
                  ],
                },
                "path": "/project/:projectId",
              },
              RouteNode {
                "absolute": false,
                "children": Array [],
                "name": "PROJECT_LIST",
                "parent": [Circular],
                "parser": Path {
                  "hasMatrixParams": false,
                  "hasQueryParams": false,
                  "hasSpatParam": false,
                  "hasUrlParams": false,
                  "params": Array [],
                  "path": "/",
                  "queryParams": Array [],
                  "queryParamsBr": Array [],
                  "source": "\\\\/",
                  "spatParams": Array [],
                  "tokens": Array [
                    Object {
                      "match": "/",
                      "otherVal": Array [],
                      "regex": /\\\\//,
                      "type": "delimiter",
                      "val": Array [
                        "/",
                      ],
                    },
                  ],
                  "urlParams": Array [],
                },
                "path": "/",
              },
            ],
            "name": "",
            "parent": undefined,
            "parser": null,
            "path": "",
          },
          "setDependencies": [Function],
          "setDependency": [Function],
          "setOption": [Function],
          "setRootPath": [Function],
          "setState": [Function],
          "start": [Function],
          "stop": [Function],
          "transitionToState": [Function],
          "urlToPath": [Function],
          "useMiddleware": [Function],
          "usePlugin": [Function],
        },
        "rootStore": [Circular],
      },
      "uiStore": UiStore {
        "currentView": Object {
          "name": "PROJECT_LIST",
        },
        "hasError": false,
        "isLoaded": false,
      },
      "userStore": UserStore {
        "authenticated": Promise {},
        "rootStore": [Circular],
        "uid": "me",
      },
    }
  }
>
  <RouterProvider
    router={
      Object {
        "add": [Function],
        "addEventListener": [Function],
        "addListener": [Function],
        "addNode": [Function],
        "addNodeListener": [Function],
        "addRouteListener": [Function],
        "areStatesDescendants": [Function],
        "areStatesEqual": [Function],
        "buildPath": [Function],
        "buildState": [Function],
        "buildUrl": [Function],
        "canActivate": [Function],
        "canDeactivate": [Function],
        "cancel": [Function],
        "clearCanDeactivate": [Function],
        "clearMiddleware": [Function],
        "clone": [Function],
        "executeFactory": [Function],
        "getDependencies": [Function],
        "getLifecycleFactories": [Function],
        "getLifecycleFunctions": [Function],
        "getListeners": [Function],
        "getMiddlewareFactories": [Function],
        "getMiddlewareFunctions": [Function],
        "getOptions": [Function],
        "getPlugins": [Function],
        "getState": [Function],
        "hasPlugin": [Function],
        "invokeEventListeners": [Function],
        "isActive": [Function],
        "isStarted": [Function],
        "makeNotFoundState": [Function],
        "makeState": [Function],
        "matchPath": [Function],
        "matchUrl": [Function],
        "navigate": [Function],
        "navigateToDefault": [Function],
        "removeEventListener": [Function],
        "removeListener": [Function],
        "removeNodeListener": [Function],
        "removeRouteListener": [Function],
        "replaceHistoryState": [Function],
        "rootNode": RouteNode {
          "absolute": false,
          "children": Array [
            RouteNode {
              "absolute": false,
              "children": Array [],
              "name": "PROJECT_NEW",
              "parent": [Circular],
              "parser": Path {
                "hasMatrixParams": false,
                "hasQueryParams": false,
                "hasSpatParam": false,
                "hasUrlParams": false,
                "params": Array [],
                "path": "/project/new",
                "queryParams": Array [],
                "queryParamsBr": Array [],
                "source": "\\\\/project\\\\/new",
                "spatParams": Array [],
                "tokens": Array [
                  Object {
                    "match": "/",
                    "otherVal": Array [],
                    "regex": /\\\\//,
                    "type": "delimiter",
                    "val": Array [
                      "/",
                    ],
                  },
                  Object {
                    "match": "project",
                    "otherVal": Array [],
                    "regex": /project/,
                    "type": "fragment",
                    "val": Array [
                      "project",
                    ],
                  },
                  Object {
                    "match": "/",
                    "otherVal": Array [],
                    "regex": /\\\\//,
                    "type": "delimiter",
                    "val": Array [
                      "/",
                    ],
                  },
                  Object {
                    "match": "new",
                    "otherVal": Array [],
                    "regex": /new/,
                    "type": "fragment",
                    "val": Array [
                      "new",
                    ],
                  },
                ],
                "urlParams": Array [],
              },
              "path": "/project/new",
            },
            RouteNode {
              "absolute": false,
              "children": Array [],
              "name": "PROJECT_OVERVIEW",
              "parent": [Circular],
              "parser": Path {
                "hasMatrixParams": false,
                "hasQueryParams": false,
                "hasSpatParam": false,
                "hasUrlParams": true,
                "params": Array [
                  "projectId",
                ],
                "path": "/project/:projectId",
                "queryParams": Array [],
                "queryParamsBr": Array [],
                "source": "\\\\/project\\\\/([a-zA-Z0-9-_.~%':]+)",
                "spatParams": Array [],
                "tokens": Array [
                  Object {
                    "match": "/",
                    "otherVal": Array [],
                    "regex": /\\\\//,
                    "type": "delimiter",
                    "val": Array [
                      "/",
                    ],
                  },
                  Object {
                    "match": "project",
                    "otherVal": Array [],
                    "regex": /project/,
                    "type": "fragment",
                    "val": Array [
                      "project",
                    ],
                  },
                  Object {
                    "match": "/",
                    "otherVal": Array [],
                    "regex": /\\\\//,
                    "type": "delimiter",
                    "val": Array [
                      "/",
                    ],
                  },
                  Object {
                    "match": ":projectId",
                    "otherVal": Array [
                      undefined,
                      undefined,
                    ],
                    "regex": /\\(\\[a-zA-Z0-9-_\\.~%':\\]\\+\\)/,
                    "type": "url-parameter",
                    "val": Array [
                      "projectId",
                    ],
                  },
                ],
                "urlParams": Array [
                  "projectId",
                ],
              },
              "path": "/project/:projectId",
            },
            RouteNode {
              "absolute": false,
              "children": Array [],
              "name": "PROJECT_LIST",
              "parent": [Circular],
              "parser": Path {
                "hasMatrixParams": false,
                "hasQueryParams": false,
                "hasSpatParam": false,
                "hasUrlParams": false,
                "params": Array [],
                "path": "/",
                "queryParams": Array [],
                "queryParamsBr": Array [],
                "source": "\\\\/",
                "spatParams": Array [],
                "tokens": Array [
                  Object {
                    "match": "/",
                    "otherVal": Array [],
                    "regex": /\\\\//,
                    "type": "delimiter",
                    "val": Array [
                      "/",
                    ],
                  },
                ],
                "urlParams": Array [],
              },
              "path": "/",
            },
          ],
          "name": "",
          "parent": undefined,
          "parser": null,
          "path": "",
        },
        "setDependencies": [Function],
        "setDependency": [Function],
        "setOption": [Function],
        "setRootPath": [Function],
        "setState": [Function],
        "start": [Function],
        "stop": [Function],
        "transitionToState": [Function],
        "urlToPath": [Function],
        "useMiddleware": [Function],
        "usePlugin": [Function],
      }
    }
  >
    <inject-Project-with-rootStore
      id="foo"
    >
      <Project
        id="foo"
        rootStore={
          RootStore {
            "entryListStore": EntryListStore {
              "active": null,
              "entries": Array [],
              "rootStore": [Circular],
            },
            "projectListStore": ProjectListStore {
              "projects": Array [],
              "rootStore": [Circular],
            },
            "repository": FirebaseRepository {
              "app": Object {
                "database": [Function],
              },
              "authenticate": [Function],
              "config": Object {
                "apiKey": "AIzaSyAcZ4DuQNJdoPhUgx542ra5Rf2Q7cezxHI",
                "authDomain": "mobx-time-tracking-cbeca.firebaseapp.com",
                "databaseURL": "https://mobx-time-tracking-cbeca.firebaseio.com",
                "messagingSenderId": "282276589695",
                "storageBucket": "mobx-time-tracking-cbeca.appspot.com",
              },
            },
            "routerStore": RouterStore {
              "instance": Object {
                "add": [Function],
                "addEventListener": [Function],
                "addListener": [Function],
                "addNode": [Function],
                "addNodeListener": [Function],
                "addRouteListener": [Function],
                "areStatesDescendants": [Function],
                "areStatesEqual": [Function],
                "buildPath": [Function],
                "buildState": [Function],
                "buildUrl": [Function],
                "canActivate": [Function],
                "canDeactivate": [Function],
                "cancel": [Function],
                "clearCanDeactivate": [Function],
                "clearMiddleware": [Function],
                "clone": [Function],
                "executeFactory": [Function],
                "getDependencies": [Function],
                "getLifecycleFactories": [Function],
                "getLifecycleFunctions": [Function],
                "getListeners": [Function],
                "getMiddlewareFactories": [Function],
                "getMiddlewareFunctions": [Function],
                "getOptions": [Function],
                "getPlugins": [Function],
                "getState": [Function],
                "hasPlugin": [Function],
                "invokeEventListeners": [Function],
                "isActive": [Function],
                "isStarted": [Function],
                "makeNotFoundState": [Function],
                "makeState": [Function],
                "matchPath": [Function],
                "matchUrl": [Function],
                "navigate": [Function],
                "navigateToDefault": [Function],
                "removeEventListener": [Function],
                "removeListener": [Function],
                "removeNodeListener": [Function],
                "removeRouteListener": [Function],
                "replaceHistoryState": [Function],
                "rootNode": RouteNode {
                  "absolute": false,
                  "children": Array [
                    RouteNode {
                      "absolute": false,
                      "children": Array [],
                      "name": "PROJECT_NEW",
                      "parent": [Circular],
                      "parser": Path {
                        "hasMatrixParams": false,
                        "hasQueryParams": false,
                        "hasSpatParam": false,
                        "hasUrlParams": false,
                        "params": Array [],
                        "path": "/project/new",
                        "queryParams": Array [],
                        "queryParamsBr": Array [],
                        "source": "\\\\/project\\\\/new",
                        "spatParams": Array [],
                        "tokens": Array [
                          Object {
                            "match": "/",
                            "otherVal": Array [],
                            "regex": /\\\\//,
                            "type": "delimiter",
                            "val": Array [
                              "/",
                            ],
                          },
                          Object {
                            "match": "project",
                            "otherVal": Array [],
                            "regex": /project/,
                            "type": "fragment",
                            "val": Array [
                              "project",
                            ],
                          },
                          Object {
                            "match": "/",
                            "otherVal": Array [],
                            "regex": /\\\\//,
                            "type": "delimiter",
                            "val": Array [
                              "/",
                            ],
                          },
                          Object {
                            "match": "new",
                            "otherVal": Array [],
                            "regex": /new/,
                            "type": "fragment",
                            "val": Array [
                              "new",
                            ],
                          },
                        ],
                        "urlParams": Array [],
                      },
                      "path": "/project/new",
                    },
                    RouteNode {
                      "absolute": false,
                      "children": Array [],
                      "name": "PROJECT_OVERVIEW",
                      "parent": [Circular],
                      "parser": Path {
                        "hasMatrixParams": false,
                        "hasQueryParams": false,
                        "hasSpatParam": false,
                        "hasUrlParams": true,
                        "params": Array [
                          "projectId",
                        ],
                        "path": "/project/:projectId",
                        "queryParams": Array [],
                        "queryParamsBr": Array [],
                        "source": "\\\\/project\\\\/([a-zA-Z0-9-_.~%':]+)",
                        "spatParams": Array [],
                        "tokens": Array [
                          Object {
                            "match": "/",
                            "otherVal": Array [],
                            "regex": /\\\\//,
                            "type": "delimiter",
                            "val": Array [
                              "/",
                            ],
                          },
                          Object {
                            "match": "project",
                            "otherVal": Array [],
                            "regex": /project/,
                            "type": "fragment",
                            "val": Array [
                              "project",
                            ],
                          },
                          Object {
                            "match": "/",
                            "otherVal": Array [],
                            "regex": /\\\\//,
                            "type": "delimiter",
                            "val": Array [
                              "/",
                            ],
                          },
                          Object {
                            "match": ":projectId",
                            "otherVal": Array [
                              undefined,
                              undefined,
                            ],
                            "regex": /\\(\\[a-zA-Z0-9-_\\.~%':\\]\\+\\)/,
                            "type": "url-parameter",
                            "val": Array [
                              "projectId",
                            ],
                          },
                        ],
                        "urlParams": Array [
                          "projectId",
                        ],
                      },
                      "path": "/project/:projectId",
                    },
                    RouteNode {
                      "absolute": false,
                      "children": Array [],
                      "name": "PROJECT_LIST",
                      "parent": [Circular],
                      "parser": Path {
                        "hasMatrixParams": false,
                        "hasQueryParams": false,
                        "hasSpatParam": false,
                        "hasUrlParams": false,
                        "params": Array [],
                        "path": "/",
                        "queryParams": Array [],
                        "queryParamsBr": Array [],
                        "source": "\\\\/",
                        "spatParams": Array [],
                        "tokens": Array [
                          Object {
                            "match": "/",
                            "otherVal": Array [],
                            "regex": /\\\\//,
                            "type": "delimiter",
                            "val": Array [
                              "/",
                            ],
                          },
                        ],
                        "urlParams": Array [],
                      },
                      "path": "/",
                    },
                  ],
                  "name": "",
                  "parent": undefined,
                  "parser": null,
                  "path": "",
                },
                "setDependencies": [Function],
                "setDependency": [Function],
                "setOption": [Function],
                "setRootPath": [Function],
                "setState": [Function],
                "start": [Function],
                "stop": [Function],
                "transitionToState": [Function],
                "urlToPath": [Function],
                "useMiddleware": [Function],
                "usePlugin": [Function],
              },
              "rootStore": [Circular],
            },
            "uiStore": UiStore {
              "currentView": Object {
                "name": "PROJECT_LIST",
              },
              "hasError": false,
              "isLoaded": false,
            },
            "userStore": UserStore {
              "authenticated": Promise {},
              "rootStore": [Circular],
              "uid": "me",
            },
          }
        }
      >
        <Error>
          <ReactCSSTransitionGroup
            transitionAppear={true}
            transitionAppearTimeout={500}
            transitionEnter={true}
            transitionEnterTimeout={500}
            transitionLeave={true}
            transitionLeaveTimeout={500}
            transitionName="entry"
          >
            <ReactTransitionGroup
              childFactory={[Function]}
              component="span"
              transitionAppear={true}
              transitionAppearTimeout={500}
              transitionEnter={true}
              transitionEnterTimeout={500}
              transitionLeave={true}
              transitionLeaveTimeout={500}
              transitionName="entry"
            >
              <span>
                <ReactCSSTransitionGroupChild
                  appear={true}
                  appearTimeout={500}
                  enter={true}
                  enterTimeout={500}
                  leave={true}
                  leaveTimeout={500}
                  name="entry"
                >
                  <styled.div>
                    <div
                      className="inqXwl"
                    >
                      <Styled(Icon)>
                        <Icon
                          className="jpXUkc"
                        >
                          <svg
                            className="jpXUkc"
                            version="1.1"
                            viewBox="16.66699981689453 10 66.66600036621094 80"
                            x="0px"
                            xmlSpace="preserve"
                            y="0px"
                          >
                            <g>
                              <path
                                d="M50,10c-18.333,0-33.333,15-33.333,33.333C16.667,54,21.667,63.665,30,70v16.667C30,88.665,31.333,90,33.333,90h33.333   C68.665,90,70,88.665,70,86.667V70c8.333-6.335,13.333-15.999,13.333-26.667C83.333,25,68.333,10,50,10z M64.668,65.667   c-0.667,0.668-1.335,1.667-1.335,2.666v15H60v-6.666c0-1.999-1.335-3.334-3.333-3.334c-1.999,0-3.334,1.335-3.334,3.334v6.666   h-6.666v-6.666c0-1.999-1.333-3.334-3.333-3.334s-3.333,1.335-3.333,3.334v6.666h-3.333v-15c0-1.334-0.667-2.334-1.333-2.666   c-7.667-4.668-12-13.001-12-22C23.333,29,35.333,17,50,17c14.668,0,26.667,12,26.667,26.667   C76.667,52.334,71.999,60.667,64.668,65.667z"
                              />
                              <path
                                d="M66.335,48.333l2.666-2.666c1.331-1.335,1.331-3.333,0-4.668c-1.335-1.333-3.334-1.333-4.668,0l-2.666,2.666L59.001,41   c-1.335-1.333-3.334-1.333-4.668,0c-1.332,1.334-1.332,3.333,0,4.668l2.666,2.666L54.333,51c-1.332,1.335-1.332,3.334,0,4.668   c0.667,0.668,1.334,1,2.334,1c0.999,0,1.666-0.332,2.334-1l2.666-2.666l2.666,2.666c0.667,0.668,1.334,1,2.334,1   c0.999,0,1.666-0.332,2.334-1c1.331-1.334,1.331-3.333,0-4.668L66.335,48.333z"
                              />
                              <path
                                d="M45.667,41c-1.334-1.333-3.333-1.333-4.667,0l-2.667,2.666L35.667,41c-1.334-1.333-3.333-1.333-4.667,0   c-1.333,1.334-1.333,3.333,0,4.668l2.666,2.666L31,50.999c-1.333,1.335-1.333,3.334,0,4.668c0.667,0.668,1.334,1,2.334,1   c0.999,0,1.667-0.332,2.334-1l2.666-2.666L41,55.667c0.667,0.668,1.334,1,2.334,1c0.999,0,1.667-0.332,2.334-1   C47,54.333,47,52.334,45.667,50.999l-2.666-2.666l2.666-2.666C47,44.333,47,42.334,45.667,41z"
                              />
                            </g>
                          </svg>
                        </Icon>
                      </Styled(Icon)>
                      <styled.div>
                        <div
                          className="gVScHC"
                        >
                          Something went terribly wrong.
                          <br />
                          We are very sorry for the inconvenience.
                          <br />
                          Talented people are already working on it
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </ReactCSSTransitionGroupChild>
              </span>
            </ReactTransitionGroup>
          </ReactCSSTransitionGroup>
        </Error>
      </Project>
    </inject-Project-with-rootStore>
  </RouterProvider>
</Provider>
`;

exports[`Project should render an existing project 1`] = `
<Provider
  rootStore={
    RootStore {
      "entryListStore": EntryListStore {
        "active": null,
        "entries": Array [
          EntryStore {
            "endTime": 2017-02-17T10:22:00.000Z,
            "id": "5346-1234-1243",
            "projectId": "1234-5678-9012",
            "rate": 35.5,
            "startTime": 2017-02-17T02:45:00.000Z,
          },
          EntryStore {
            "endTime": 2017-02-16T19:59:00.000Z,
            "id": "3456-3456-3244",
            "projectId": "1234-5678-9012",
            "rate": 35.5,
            "startTime": 2017-02-16T10:22:00.000Z,
          },
          EntryStore {
            "endTime": 2017-02-15T17:21:00.000Z,
            "id": "9786-2345-1234",
            "projectId": "1234-5678-9012",
            "rate": 35.5,
            "startTime": 2017-02-15T09:59:00.000Z,
          },
          EntryStore {
            "endTime": 2017-02-14T14:59:00.000Z,
            "id": "9845-6524-2435",
            "projectId": "2345-9384-324523",
            "rate": 100.5,
            "startTime": 2017-02-14T07:23:00.000Z,
          },
          EntryStore {
            "endTime": 2017-02-14T14:59:00.000Z,
            "id": "4567-2341-2369-7684",
            "projectId": "2345-9384-324523",
            "rate": 15.5,
            "startTime": 2017-02-14T07:23:00.000Z,
          },
          EntryStore {
            "endTime": 2017-02-14T14:59:00.000Z,
            "id": "2342-6552-5345",
            "projectId": "1234-5678-9012",
            "rate": 35.5,
            "startTime": 2017-02-14T07:23:00.000Z,
          },
        ],
        "rootStore": [Circular],
      },
      "projectListStore": ProjectListStore {
        "projects": Array [
          ProjectStore {
            "description": "A really cool project",
            "id": "1234-5678-9012",
            "name": "Foo Industries Redesign",
            "rootStore": [Circular],
            "standardHours": 8,
            "standardRate": 20,
          },
          ProjectStore {
            "description": "Doc is annoying",
            "id": "2345-9384-324523",
            "name": "ACME Inc.",
            "rootStore": [Circular],
            "standardHours": 6,
            "standardRate": 120,
          },
          ProjectStore {
            "description": "I am Batman",
            "id": "9876-6554-5123",
            "name": "Wayne Industries",
            "rootStore": [Circular],
            "standardHours": 24,
            "standardRate": 523,
          },
        ],
        "rootStore": [Circular],
      },
      "repository": FirebaseRepository {
        "app": Object {
          "database": [Function],
        },
        "authenticate": [Function],
        "config": Object {
          "apiKey": "AIzaSyAcZ4DuQNJdoPhUgx542ra5Rf2Q7cezxHI",
          "authDomain": "mobx-time-tracking-cbeca.firebaseapp.com",
          "databaseURL": "https://mobx-time-tracking-cbeca.firebaseio.com",
          "messagingSenderId": "282276589695",
          "storageBucket": "mobx-time-tracking-cbeca.appspot.com",
        },
      },
      "routerStore": RouterStore {
        "instance": Object {
          "add": [Function],
          "addEventListener": [Function],
          "addListener": [Function],
          "addNode": [Function],
          "addNodeListener": [Function],
          "addRouteListener": [Function],
          "areStatesDescendants": [Function],
          "areStatesEqual": [Function],
          "buildPath": [Function],
          "buildState": [Function],
          "buildUrl": [Function],
          "canActivate": [Function],
          "canDeactivate": [Function],
          "cancel": [Function],
          "clearCanDeactivate": [Function],
          "clearMiddleware": [Function],
          "clone": [Function],
          "executeFactory": [Function],
          "getDependencies": [Function],
          "getLifecycleFactories": [Function],
          "getLifecycleFunctions": [Function],
          "getListeners": [Function],
          "getMiddlewareFactories": [Function],
          "getMiddlewareFunctions": [Function],
          "getOptions": [Function],
          "getPlugins": [Function],
          "getState": [Function],
          "hasPlugin": [Function],
          "invokeEventListeners": [Function],
          "isActive": [Function],
          "isStarted": [Function],
          "makeNotFoundState": [Function],
          "makeState": [Function],
          "matchPath": [Function],
          "matchUrl": [Function],
          "navigate": [Function],
          "navigateToDefault": [Function],
          "removeEventListener": [Function],
          "removeListener": [Function],
          "removeNodeListener": [Function],
          "removeRouteListener": [Function],
          "replaceHistoryState": [Function],
          "rootNode": RouteNode {
            "absolute": false,
            "children": Array [
              RouteNode {
                "absolute": false,
                "children": Array [],
                "name": "PROJECT_NEW",
                "parent": [Circular],
                "parser": Path {
                  "hasMatrixParams": false,
                  "hasQueryParams": false,
                  "hasSpatParam": false,
                  "hasUrlParams": false,
                  "params": Array [],
                  "path": "/project/new",
                  "queryParams": Array [],
                  "queryParamsBr": Array [],
                  "source": "\\\\/project\\\\/new",
                  "spatParams": Array [],
                  "tokens": Array [
                    Object {
                      "match": "/",
                      "otherVal": Array [],
                      "regex": /\\\\//,
                      "type": "delimiter",
                      "val": Array [
                        "/",
                      ],
                    },
                    Object {
                      "match": "project",
                      "otherVal": Array [],
                      "regex": /project/,
                      "type": "fragment",
                      "val": Array [
                        "project",
                      ],
                    },
                    Object {
                      "match": "/",
                      "otherVal": Array [],
                      "regex": /\\\\//,
                      "type": "delimiter",
                      "val": Array [
                        "/",
                      ],
                    },
                    Object {
                      "match": "new",
                      "otherVal": Array [],
                      "regex": /new/,
                      "type": "fragment",
                      "val": Array [
                        "new",
                      ],
                    },
                  ],
                  "urlParams": Array [],
                },
                "path": "/project/new",
              },
              RouteNode {
                "absolute": false,
                "children": Array [],
                "name": "PROJECT_OVERVIEW",
                "parent": [Circular],
                "parser": Path {
                  "hasMatrixParams": false,
                  "hasQueryParams": false,
                  "hasSpatParam": false,
                  "hasUrlParams": true,
                  "params": Array [
                    "projectId",
                  ],
                  "path": "/project/:projectId",
                  "queryParams": Array [],
                  "queryParamsBr": Array [],
                  "source": "\\\\/project\\\\/([a-zA-Z0-9-_.~%':]+)",
                  "spatParams": Array [],
                  "tokens": Array [
                    Object {
                      "match": "/",
                      "otherVal": Array [],
                      "regex": /\\\\//,
                      "type": "delimiter",
                      "val": Array [
                        "/",
                      ],
                    },
                    Object {
                      "match": "project",
                      "otherVal": Array [],
                      "regex": /project/,
                      "type": "fragment",
                      "val": Array [
                        "project",
                      ],
                    },
                    Object {
                      "match": "/",
                      "otherVal": Array [],
                      "regex": /\\\\//,
                      "type": "delimiter",
                      "val": Array [
                        "/",
                      ],
                    },
                    Object {
                      "match": ":projectId",
                      "otherVal": Array [
                        undefined,
                        undefined,
                      ],
                      "regex": /\\(\\[a-zA-Z0-9-_\\.~%':\\]\\+\\)/,
                      "type": "url-parameter",
                      "val": Array [
                        "projectId",
                      ],
                    },
                  ],
                  "urlParams": Array [
                    "projectId",
                  ],
                },
                "path": "/project/:projectId",
              },
              RouteNode {
                "absolute": false,
                "children": Array [],
                "name": "PROJECT_LIST",
                "parent": [Circular],
                "parser": Path {
                  "hasMatrixParams": false,
                  "hasQueryParams": false,
                  "hasSpatParam": false,
                  "hasUrlParams": false,
                  "params": Array [],
                  "path": "/",
                  "queryParams": Array [],
                  "queryParamsBr": Array [],
                  "source": "\\\\/",
                  "spatParams": Array [],
                  "tokens": Array [
                    Object {
                      "match": "/",
                      "otherVal": Array [],
                      "regex": /\\\\//,
                      "type": "delimiter",
                      "val": Array [
                        "/",
                      ],
                    },
                  ],
                  "urlParams": Array [],
                },
                "path": "/",
              },
            ],
            "name": "",
            "parent": undefined,
            "parser": null,
            "path": "",
          },
          "setDependencies": [Function],
          "setDependency": [Function],
          "setOption": [Function],
          "setRootPath": [Function],
          "setState": [Function],
          "start": [Function],
          "stop": [Function],
          "transitionToState": [Function],
          "urlToPath": [Function],
          "useMiddleware": [Function],
          "usePlugin": [Function],
        },
        "rootStore": [Circular],
      },
      "uiStore": UiStore {
        "currentView": Object {
          "name": "PROJECT_LIST",
        },
        "hasError": false,
        "isLoaded": false,
      },
      "userStore": UserStore {
        "authenticated": Promise {},
        "rootStore": [Circular],
        "uid": "me",
      },
    }
  }
>
  <RouterProvider
    router={
      Object {
        "add": [Function],
        "addEventListener": [Function],
        "addListener": [Function],
        "addNode": [Function],
        "addNodeListener": [Function],
        "addRouteListener": [Function],
        "areStatesDescendants": [Function],
        "areStatesEqual": [Function],
        "buildPath": [Function],
        "buildState": [Function],
        "buildUrl": [Function],
        "canActivate": [Function],
        "canDeactivate": [Function],
        "cancel": [Function],
        "clearCanDeactivate": [Function],
        "clearMiddleware": [Function],
        "clone": [Function],
        "executeFactory": [Function],
        "getDependencies": [Function],
        "getLifecycleFactories": [Function],
        "getLifecycleFunctions": [Function],
        "getListeners": [Function],
        "getMiddlewareFactories": [Function],
        "getMiddlewareFunctions": [Function],
        "getOptions": [Function],
        "getPlugins": [Function],
        "getState": [Function],
        "hasPlugin": [Function],
        "invokeEventListeners": [Function],
        "isActive": [Function],
        "isStarted": [Function],
        "makeNotFoundState": [Function],
        "makeState": [Function],
        "matchPath": [Function],
        "matchUrl": [Function],
        "navigate": [Function],
        "navigateToDefault": [Function],
        "removeEventListener": [Function],
        "removeListener": [Function],
        "removeNodeListener": [Function],
        "removeRouteListener": [Function],
        "replaceHistoryState": [Function],
        "rootNode": RouteNode {
          "absolute": false,
          "children": Array [
            RouteNode {
              "absolute": false,
              "children": Array [],
              "name": "PROJECT_NEW",
              "parent": [Circular],
              "parser": Path {
                "hasMatrixParams": false,
                "hasQueryParams": false,
                "hasSpatParam": false,
                "hasUrlParams": false,
                "params": Array [],
                "path": "/project/new",
                "queryParams": Array [],
                "queryParamsBr": Array [],
                "source": "\\\\/project\\\\/new",
                "spatParams": Array [],
                "tokens": Array [
                  Object {
                    "match": "/",
                    "otherVal": Array [],
                    "regex": /\\\\//,
                    "type": "delimiter",
                    "val": Array [
                      "/",
                    ],
                  },
                  Object {
                    "match": "project",
                    "otherVal": Array [],
                    "regex": /project/,
                    "type": "fragment",
                    "val": Array [
                      "project",
                    ],
                  },
                  Object {
                    "match": "/",
                    "otherVal": Array [],
                    "regex": /\\\\//,
                    "type": "delimiter",
                    "val": Array [
                      "/",
                    ],
                  },
                  Object {
                    "match": "new",
                    "otherVal": Array [],
                    "regex": /new/,
                    "type": "fragment",
                    "val": Array [
                      "new",
                    ],
                  },
                ],
                "urlParams": Array [],
              },
              "path": "/project/new",
            },
            RouteNode {
              "absolute": false,
              "children": Array [],
              "name": "PROJECT_OVERVIEW",
              "parent": [Circular],
              "parser": Path {
                "hasMatrixParams": false,
                "hasQueryParams": false,
                "hasSpatParam": false,
                "hasUrlParams": true,
                "params": Array [
                  "projectId",
                ],
                "path": "/project/:projectId",
                "queryParams": Array [],
                "queryParamsBr": Array [],
                "source": "\\\\/project\\\\/([a-zA-Z0-9-_.~%':]+)",
                "spatParams": Array [],
                "tokens": Array [
                  Object {
                    "match": "/",
                    "otherVal": Array [],
                    "regex": /\\\\//,
                    "type": "delimiter",
                    "val": Array [
                      "/",
                    ],
                  },
                  Object {
                    "match": "project",
                    "otherVal": Array [],
                    "regex": /project/,
                    "type": "fragment",
                    "val": Array [
                      "project",
                    ],
                  },
                  Object {
                    "match": "/",
                    "otherVal": Array [],
                    "regex": /\\\\//,
                    "type": "delimiter",
                    "val": Array [
                      "/",
                    ],
                  },
                  Object {
                    "match": ":projectId",
                    "otherVal": Array [
                      undefined,
                      undefined,
                    ],
                    "regex": /\\(\\[a-zA-Z0-9-_\\.~%':\\]\\+\\)/,
                    "type": "url-parameter",
                    "val": Array [
                      "projectId",
                    ],
                  },
                ],
                "urlParams": Array [
                  "projectId",
                ],
              },
              "path": "/project/:projectId",
            },
            RouteNode {
              "absolute": false,
              "children": Array [],
              "name": "PROJECT_LIST",
              "parent": [Circular],
              "parser": Path {
                "hasMatrixParams": false,
                "hasQueryParams": false,
                "hasSpatParam": false,
                "hasUrlParams": false,
                "params": Array [],
                "path": "/",
                "queryParams": Array [],
                "queryParamsBr": Array [],
                "source": "\\\\/",
                "spatParams": Array [],
                "tokens": Array [
                  Object {
                    "match": "/",
                    "otherVal": Array [],
                    "regex": /\\\\//,
                    "type": "delimiter",
                    "val": Array [
                      "/",
                    ],
                  },
                ],
                "urlParams": Array [],
              },
              "path": "/",
            },
          ],
          "name": "",
          "parent": undefined,
          "parser": null,
          "path": "",
        },
        "setDependencies": [Function],
        "setDependency": [Function],
        "setOption": [Function],
        "setRootPath": [Function],
        "setState": [Function],
        "start": [Function],
        "stop": [Function],
        "transitionToState": [Function],
        "urlToPath": [Function],
        "useMiddleware": [Function],
        "usePlugin": [Function],
      }
    }
  >
    <inject-Project-with-rootStore
      id="1234-5678-9012"
    >
      <Project
        id="1234-5678-9012"
        rootStore={
          RootStore {
            "entryListStore": EntryListStore {
              "active": null,
              "entries": Array [
                EntryStore {
                  "endTime": 2017-02-17T10:22:00.000Z,
                  "id": "5346-1234-1243",
                  "projectId": "1234-5678-9012",
                  "rate": 35.5,
                  "startTime": 2017-02-17T02:45:00.000Z,
                },
                EntryStore {
                  "endTime": 2017-02-16T19:59:00.000Z,
                  "id": "3456-3456-3244",
                  "projectId": "1234-5678-9012",
                  "rate": 35.5,
                  "startTime": 2017-02-16T10:22:00.000Z,
                },
                EntryStore {
                  "endTime": 2017-02-15T17:21:00.000Z,
                  "id": "9786-2345-1234",
                  "projectId": "1234-5678-9012",
                  "rate": 35.5,
                  "startTime": 2017-02-15T09:59:00.000Z,
                },
                EntryStore {
                  "endTime": 2017-02-14T14:59:00.000Z,
                  "id": "9845-6524-2435",
                  "projectId": "2345-9384-324523",
                  "rate": 100.5,
                  "startTime": 2017-02-14T07:23:00.000Z,
                },
                EntryStore {
                  "endTime": 2017-02-14T14:59:00.000Z,
                  "id": "4567-2341-2369-7684",
                  "projectId": "2345-9384-324523",
                  "rate": 15.5,
                  "startTime": 2017-02-14T07:23:00.000Z,
                },
                EntryStore {
                  "endTime": 2017-02-14T14:59:00.000Z,
                  "id": "2342-6552-5345",
                  "projectId": "1234-5678-9012",
                  "rate": 35.5,
                  "startTime": 2017-02-14T07:23:00.000Z,
                },
              ],
              "rootStore": [Circular],
            },
            "projectListStore": ProjectListStore {
              "projects": Array [
                ProjectStore {
                  "description": "A really cool project",
                  "id": "1234-5678-9012",
                  "name": "Foo Industries Redesign",
                  "rootStore": [Circular],
                  "standardHours": 8,
                  "standardRate": 20,
                },
                ProjectStore {
                  "description": "Doc is annoying",
                  "id": "2345-9384-324523",
                  "name": "ACME Inc.",
                  "rootStore": [Circular],
                  "standardHours": 6,
                  "standardRate": 120,
                },
                ProjectStore {
                  "description": "I am Batman",
                  "id": "9876-6554-5123",
                  "name": "Wayne Industries",
                  "rootStore": [Circular],
                  "standardHours": 24,
                  "standardRate": 523,
                },
              ],
              "rootStore": [Circular],
            },
            "repository": FirebaseRepository {
              "app": Object {
                "database": [Function],
              },
              "authenticate": [Function],
              "config": Object {
                "apiKey": "AIzaSyAcZ4DuQNJdoPhUgx542ra5Rf2Q7cezxHI",
                "authDomain": "mobx-time-tracking-cbeca.firebaseapp.com",
                "databaseURL": "https://mobx-time-tracking-cbeca.firebaseio.com",
                "messagingSenderId": "282276589695",
                "storageBucket": "mobx-time-tracking-cbeca.appspot.com",
              },
            },
            "routerStore": RouterStore {
              "instance": Object {
                "add": [Function],
                "addEventListener": [Function],
                "addListener": [Function],
                "addNode": [Function],
                "addNodeListener": [Function],
                "addRouteListener": [Function],
                "areStatesDescendants": [Function],
                "areStatesEqual": [Function],
                "buildPath": [Function],
                "buildState": [Function],
                "buildUrl": [Function],
                "canActivate": [Function],
                "canDeactivate": [Function],
                "cancel": [Function],
                "clearCanDeactivate": [Function],
                "clearMiddleware": [Function],
                "clone": [Function],
                "executeFactory": [Function],
                "getDependencies": [Function],
                "getLifecycleFactories": [Function],
                "getLifecycleFunctions": [Function],
                "getListeners": [Function],
                "getMiddlewareFactories": [Function],
                "getMiddlewareFunctions": [Function],
                "getOptions": [Function],
                "getPlugins": [Function],
                "getState": [Function],
                "hasPlugin": [Function],
                "invokeEventListeners": [Function],
                "isActive": [Function],
                "isStarted": [Function],
                "makeNotFoundState": [Function],
                "makeState": [Function],
                "matchPath": [Function],
                "matchUrl": [Function],
                "navigate": [Function],
                "navigateToDefault": [Function],
                "removeEventListener": [Function],
                "removeListener": [Function],
                "removeNodeListener": [Function],
                "removeRouteListener": [Function],
                "replaceHistoryState": [Function],
                "rootNode": RouteNode {
                  "absolute": false,
                  "children": Array [
                    RouteNode {
                      "absolute": false,
                      "children": Array [],
                      "name": "PROJECT_NEW",
                      "parent": [Circular],
                      "parser": Path {
                        "hasMatrixParams": false,
                        "hasQueryParams": false,
                        "hasSpatParam": false,
                        "hasUrlParams": false,
                        "params": Array [],
                        "path": "/project/new",
                        "queryParams": Array [],
                        "queryParamsBr": Array [],
                        "source": "\\\\/project\\\\/new",
                        "spatParams": Array [],
                        "tokens": Array [
                          Object {
                            "match": "/",
                            "otherVal": Array [],
                            "regex": /\\\\//,
                            "type": "delimiter",
                            "val": Array [
                              "/",
                            ],
                          },
                          Object {
                            "match": "project",
                            "otherVal": Array [],
                            "regex": /project/,
                            "type": "fragment",
                            "val": Array [
                              "project",
                            ],
                          },
                          Object {
                            "match": "/",
                            "otherVal": Array [],
                            "regex": /\\\\//,
                            "type": "delimiter",
                            "val": Array [
                              "/",
                            ],
                          },
                          Object {
                            "match": "new",
                            "otherVal": Array [],
                            "regex": /new/,
                            "type": "fragment",
                            "val": Array [
                              "new",
                            ],
                          },
                        ],
                        "urlParams": Array [],
                      },
                      "path": "/project/new",
                    },
                    RouteNode {
                      "absolute": false,
                      "children": Array [],
                      "name": "PROJECT_OVERVIEW",
                      "parent": [Circular],
                      "parser": Path {
                        "hasMatrixParams": false,
                        "hasQueryParams": false,
                        "hasSpatParam": false,
                        "hasUrlParams": true,
                        "params": Array [
                          "projectId",
                        ],
                        "path": "/project/:projectId",
                        "queryParams": Array [],
                        "queryParamsBr": Array [],
                        "source": "\\\\/project\\\\/([a-zA-Z0-9-_.~%':]+)",
                        "spatParams": Array [],
                        "tokens": Array [
                          Object {
                            "match": "/",
                            "otherVal": Array [],
                            "regex": /\\\\//,
                            "type": "delimiter",
                            "val": Array [
                              "/",
                            ],
                          },
                          Object {
                            "match": "project",
                            "otherVal": Array [],
                            "regex": /project/,
                            "type": "fragment",
                            "val": Array [
                              "project",
                            ],
                          },
                          Object {
                            "match": "/",
                            "otherVal": Array [],
                            "regex": /\\\\//,
                            "type": "delimiter",
                            "val": Array [
                              "/",
                            ],
                          },
                          Object {
                            "match": ":projectId",
                            "otherVal": Array [
                              undefined,
                              undefined,
                            ],
                            "regex": /\\(\\[a-zA-Z0-9-_\\.~%':\\]\\+\\)/,
                            "type": "url-parameter",
                            "val": Array [
                              "projectId",
                            ],
                          },
                        ],
                        "urlParams": Array [
                          "projectId",
                        ],
                      },
                      "path": "/project/:projectId",
                    },
                    RouteNode {
                      "absolute": false,
                      "children": Array [],
                      "name": "PROJECT_LIST",
                      "parent": [Circular],
                      "parser": Path {
                        "hasMatrixParams": false,
                        "hasQueryParams": false,
                        "hasSpatParam": false,
                        "hasUrlParams": false,
                        "params": Array [],
                        "path": "/",
                        "queryParams": Array [],
                        "queryParamsBr": Array [],
                        "source": "\\\\/",
                        "spatParams": Array [],
                        "tokens": Array [
                          Object {
                            "match": "/",
                            "otherVal": Array [],
                            "regex": /\\\\//,
                            "type": "delimiter",
                            "val": Array [
                              "/",
                            ],
                          },
                        ],
                        "urlParams": Array [],
                      },
                      "path": "/",
                    },
                  ],
                  "name": "",
                  "parent": undefined,
                  "parser": null,
                  "path": "",
                },
                "setDependencies": [Function],
                "setDependency": [Function],
                "setOption": [Function],
                "setRootPath": [Function],
                "setState": [Function],
                "start": [Function],
                "stop": [Function],
                "transitionToState": [Function],
                "urlToPath": [Function],
                "useMiddleware": [Function],
                "usePlugin": [Function],
              },
              "rootStore": [Circular],
            },
            "uiStore": UiStore {
              "currentView": Object {
                "name": "PROJECT_LIST",
              },
              "hasError": false,
              "isLoaded": false,
            },
            "userStore": UserStore {
              "authenticated": Promise {},
              "rootStore": [Circular],
              "uid": "me",
            },
          }
        }
      >
        <styled.section
          hasRunningTimer={false}
        >
          <section
            className="ftzbYm"
          >
            <EntriesListHeader
              project="Foo Industries Redesign"
            >
              <styled.header>
                <header
                  className="eBvrzp"
                >
                  <Styled(WithRoute[BaseLink])
                    routeName="PROJECT_LIST"
                  >
                    <WithRoute[BaseLink]
                      className="bxyqwO"
                      routeName="PROJECT_LIST"
                    >
                      <BaseLink
                        activeClassName="active"
                        activeStrict={false}
                        className="bxyqwO"
                        previousRoute={null}
                        route={
                          Object {
                            "meta": Object {
                              "id": 1,
                              "params": Object {
                                "PROJECT_LIST": Object {},
                              },
                            },
                            "name": "PROJECT_LIST",
                            "params": Object {},
                            "path": "/",
                          }
                        }
                        routeName="PROJECT_LIST"
                        routeOptions={Object {}}
                        routeParams={Object {}}
                        router={
                          Object {
                            "add": [Function],
                            "addEventListener": [Function],
                            "addListener": [Function],
                            "addNode": [Function],
                            "addNodeListener": [Function],
                            "addRouteListener": [Function],
                            "areStatesDescendants": [Function],
                            "areStatesEqual": [Function],
                            "buildPath": [Function],
                            "buildState": [Function],
                            "buildUrl": [Function],
                            "canActivate": [Function],
                            "canDeactivate": [Function],
                            "cancel": [Function],
                            "clearCanDeactivate": [Function],
                            "clearMiddleware": [Function],
                            "clone": [Function],
                            "executeFactory": [Function],
                            "getDependencies": [Function],
                            "getLifecycleFactories": [Function],
                            "getLifecycleFunctions": [Function],
                            "getListeners": [Function],
                            "getMiddlewareFactories": [Function],
                            "getMiddlewareFunctions": [Function],
                            "getOptions": [Function],
                            "getPlugins": [Function],
                            "getState": [Function],
                            "hasPlugin": [Function],
                            "invokeEventListeners": [Function],
                            "isActive": [Function],
                            "isStarted": [Function],
                            "makeNotFoundState": [Function],
                            "makeState": [Function],
                            "matchPath": [Function],
                            "matchUrl": [Function],
                            "navigate": [Function],
                            "navigateToDefault": [Function],
                            "removeEventListener": [Function],
                            "removeListener": [Function],
                            "removeNodeListener": [Function],
                            "removeRouteListener": [Function],
                            "replaceHistoryState": [Function],
                            "rootNode": RouteNode {
                              "absolute": false,
                              "children": Array [
                                RouteNode {
                                  "absolute": false,
                                  "children": Array [],
                                  "name": "PROJECT_NEW",
                                  "parent": [Circular],
                                  "parser": Path {
                                    "hasMatrixParams": false,
                                    "hasQueryParams": false,
                                    "hasSpatParam": false,
                                    "hasUrlParams": false,
                                    "params": Array [],
                                    "path": "/project/new",
                                    "queryParams": Array [],
                                    "queryParamsBr": Array [],
                                    "source": "\\\\/project\\\\/new",
                                    "spatParams": Array [],
                                    "tokens": Array [
                                      Object {
                                        "match": "/",
                                        "otherVal": Array [],
                                        "regex": /\\\\//,
                                        "type": "delimiter",
                                        "val": Array [
                                          "/",
                                        ],
                                      },
                                      Object {
                                        "match": "project",
                                        "otherVal": Array [],
                                        "regex": /project/,
                                        "type": "fragment",
                                        "val": Array [
                                          "project",
                                        ],
                                      },
                                      Object {
                                        "match": "/",
                                        "otherVal": Array [],
                                        "regex": /\\\\//,
                                        "type": "delimiter",
                                        "val": Array [
                                          "/",
                                        ],
                                      },
                                      Object {
                                        "match": "new",
                                        "otherVal": Array [],
                                        "regex": /new/,
                                        "type": "fragment",
                                        "val": Array [
                                          "new",
                                        ],
                                      },
                                    ],
                                    "urlParams": Array [],
                                  },
                                  "path": "/project/new",
                                },
                                RouteNode {
                                  "absolute": false,
                                  "children": Array [],
                                  "name": "PROJECT_OVERVIEW",
                                  "parent": [Circular],
                                  "parser": Path {
                                    "hasMatrixParams": false,
                                    "hasQueryParams": false,
                                    "hasSpatParam": false,
                                    "hasUrlParams": true,
                                    "params": Array [
                                      "projectId",
                                    ],
                                    "path": "/project/:projectId",
                                    "queryParams": Array [],
                                    "queryParamsBr": Array [],
                                    "source": "\\\\/project\\\\/([a-zA-Z0-9-_.~%':]+)",
                                    "spatParams": Array [],
                                    "tokens": Array [
                                      Object {
                                        "match": "/",
                                        "otherVal": Array [],
                                        "regex": /\\\\//,
                                        "type": "delimiter",
                                        "val": Array [
                                          "/",
                                        ],
                                      },
                                      Object {
                                        "match": "project",
                                        "otherVal": Array [],
                                        "regex": /project/,
                                        "type": "fragment",
                                        "val": Array [
                                          "project",
                                        ],
                                      },
                                      Object {
                                        "match": "/",
                                        "otherVal": Array [],
                                        "regex": /\\\\//,
                                        "type": "delimiter",
                                        "val": Array [
                                          "/",
                                        ],
                                      },
                                      Object {
                                        "match": ":projectId",
                                        "otherVal": Array [
                                          undefined,
                                          undefined,
                                        ],
                                        "regex": /\\(\\[a-zA-Z0-9-_\\.~%':\\]\\+\\)/,
                                        "type": "url-parameter",
                                        "val": Array [
                                          "projectId",
                                        ],
                                      },
                                    ],
                                    "urlParams": Array [
                                      "projectId",
                                    ],
                                  },
                                  "path": "/project/:projectId",
                                },
                                RouteNode {
                                  "absolute": false,
                                  "children": Array [],
                                  "name": "PROJECT_LIST",
                                  "parent": [Circular],
                                  "parser": Path {
                                    "hasMatrixParams": false,
                                    "hasQueryParams": false,
                                    "hasSpatParam": false,
                                    "hasUrlParams": false,
                                    "params": Array [],
                                    "path": "/",
                                    "queryParams": Array [],
                                    "queryParamsBr": Array [],
                                    "source": "\\\\/",
                                    "spatParams": Array [],
                                    "tokens": Array [
                                      Object {
                                        "match": "/",
                                        "otherVal": Array [],
                                        "regex": /\\\\//,
                                        "type": "delimiter",
                                        "val": Array [
                                          "/",
                                        ],
                                      },
                                    ],
                                    "urlParams": Array [],
                                  },
                                  "path": "/",
                                },
                              ],
                              "name": "",
                              "parent": undefined,
                              "parser": null,
                              "path": "",
                            },
                            "setDependencies": [Function],
                            "setDependency": [Function],
                            "setOption": [Function],
                            "setRootPath": [Function],
                            "setState": [Function],
                            "start": [Function],
                            "stop": [Function],
                            "transitionToState": [Function],
                            "urlToPath": [Function],
                            "useMiddleware": [Function],
                            "usePlugin": [Function],
                          }
                        }
                      >
                        <a
                          className="bxyqwO active"
                          href="/"
                          onClick={[Function]}
                        >
                          <Styled(Icon)>
                            <Icon
                              className="bNJGjv"
                            >
                              <svg
                                className="bNJGjv"
                                enableBackground="new 0 0 100 100"
                                version="1.1"
                                viewBox="21.530000686645508 -1.218999981880188 58.04701232910156 102.03800201416016"
                                x="0px"
                                xmlns="http://www.w3.org/2000/svg"
                                y="0px"
                              >
                                <path
                                  d="M21.53,50.809L71.688,0.651c0,0,2.685-1.87,5.285,0.73c2.604,2.601,0,4.877,0,4.877l-44.63,44.631  l42.517,42.516c0,0,2.211,2.666-0.164,5.039c-2.373,2.375-5.688,0-5.688,0L21.53,50.809z"
                                  fill="#000000"
                                />
                              </svg>
                            </Icon>
                          </Styled(Icon)>
                        </a>
                      </BaseLink>
                    </WithRoute[BaseLink]>
                  </Styled(WithRoute[BaseLink])>
                  <styled.h1>
                    <h1
                      className="ecGOWQ"
                    >
                      Foo Industries Redesign
                    </h1>
                  </styled.h1>
                  <div>
                     
                  </div>
                </header>
              </styled.header>
            </EntriesListHeader>
            <ClockIn
              running={false}
              startEntry={[Function]}
              stopEntry={[Function]}
            >
              <styled.div>
                <div
                  className="frIlRZ"
                >
                  <styled.button
                    error={false}
                    onClick={[Function]}
                    success={true}
                  >
                    <button
                      className="hvWpBV"
                      onClick={[Function]}
                    >
                      Clock In
                    </button>
                  </styled.button>
                </div>
              </styled.div>
            </ClockIn>
            <EntryList
              entryList={
                Array [
                  EntryStore {
                    "endTime": 2017-02-17T10:22:00.000Z,
                    "id": "5346-1234-1243",
                    "projectId": "1234-5678-9012",
                    "rate": 35.5,
                    "startTime": 2017-02-17T02:45:00.000Z,
                  },
                  EntryStore {
                    "endTime": 2017-02-16T19:59:00.000Z,
                    "id": "3456-3456-3244",
                    "projectId": "1234-5678-9012",
                    "rate": 35.5,
                    "startTime": 2017-02-16T10:22:00.000Z,
                  },
                  EntryStore {
                    "endTime": 2017-02-15T17:21:00.000Z,
                    "id": "9786-2345-1234",
                    "projectId": "1234-5678-9012",
                    "rate": 35.5,
                    "startTime": 2017-02-15T09:59:00.000Z,
                  },
                  EntryStore {
                    "endTime": 2017-02-14T14:59:00.000Z,
                    "id": "2342-6552-5345",
                    "projectId": "1234-5678-9012",
                    "rate": 35.5,
                    "startTime": 2017-02-14T07:23:00.000Z,
                  },
                ]
              }
            >
              <styled.section>
                <section
                  className="fzSavm"
                >
                  <Component
                    duration={27420}
                    end={2017-02-17T10:22:00.000Z}
                    start={2017-02-17T02:45:00.000Z}
                    total={270.39166666666665}
                  >
                    <styled.div>
                      <div
                        className="jEImSP"
                      >
                        <Styled(BaseRow)
                          contentCells={4}
                        >
                          <BaseRow
                            className="gOOxWv"
                            contentCells={4}
                          >
                            <div
                              className="gOOxWv"
                            >
                              <styled.div>
                                <div
                                  className="dzshZu"
                                >
                                  <styled.div>
                                    <div
                                      className="iwOXrP"
                                    >
                                      Fr. 17. February 2017
                                    </div>
                                  </styled.div>
                                  <styled.div>
                                    <div
                                      className="bwPZOZ"
                                    >
                                      270,39 EUR
                                    </div>
                                  </styled.div>
                                  <styled.div
                                    begin={true}
                                  >
                                    <div
                                      begin={true}
                                      className="lYNpw"
                                    >
                                      03:45
                                    </div>
                                  </styled.div>
                                  <styled.div
                                    end={true}
                                  >
                                    <div
                                      className="jCERDf"
                                      end={true}
                                    >
                                      11:22
                                    </div>
                                  </styled.div>
                                  <styled.div>
                                    <div
                                      className="fCpcNg"
                                    >
                                      07:37:00
                                    </div>
                                  </styled.div>
                                </div>
                              </styled.div>
                            </div>
                          </BaseRow>
                        </Styled(BaseRow)>
                      </div>
                    </styled.div>
                  </Component>
                  <Component
                    duration={34620}
                    end={2017-02-16T19:59:00.000Z}
                    start={2017-02-16T10:22:00.000Z}
                    total={341.39166666666665}
                  >
                    <styled.div>
                      <div
                        className="jEImSP"
                      >
                        <Styled(BaseRow)
                          contentCells={4}
                        >
                          <BaseRow
                            className="gOOxWv"
                            contentCells={4}
                          >
                            <div
                              className="gOOxWv"
                            >
                              <styled.div>
                                <div
                                  className="dzshZu"
                                >
                                  <styled.div>
                                    <div
                                      className="iwOXrP"
                                    >
                                      Th. 16. February 2017
                                    </div>
                                  </styled.div>
                                  <styled.div>
                                    <div
                                      className="bwPZOZ"
                                    >
                                      341,39 EUR
                                    </div>
                                  </styled.div>
                                  <styled.div
                                    begin={true}
                                  >
                                    <div
                                      begin={true}
                                      className="lYNpw"
                                    >
                                      11:22
                                    </div>
                                  </styled.div>
                                  <styled.div
                                    end={true}
                                  >
                                    <div
                                      className="jCERDf"
                                      end={true}
                                    >
                                      20:59
                                    </div>
                                  </styled.div>
                                  <styled.div>
                                    <div
                                      className="fCpcNg"
                                    >
                                      09:37:00
                                    </div>
                                  </styled.div>
                                </div>
                              </styled.div>
                            </div>
                          </BaseRow>
                        </Styled(BaseRow)>
                      </div>
                    </styled.div>
                  </Component>
                  <Component
                    duration={26520}
                    end={2017-02-15T17:21:00.000Z}
                    start={2017-02-15T09:59:00.000Z}
                    total={261.51666666666665}
                  >
                    <styled.div>
                      <div
                        className="jEImSP"
                      >
                        <Styled(BaseRow)
                          contentCells={4}
                        >
                          <BaseRow
                            className="gOOxWv"
                            contentCells={4}
                          >
                            <div
                              className="gOOxWv"
                            >
                              <styled.div>
                                <div
                                  className="dzshZu"
                                >
                                  <styled.div>
                                    <div
                                      className="iwOXrP"
                                    >
                                      We. 15. February 2017
                                    </div>
                                  </styled.div>
                                  <styled.div>
                                    <div
                                      className="bwPZOZ"
                                    >
                                      261,52 EUR
                                    </div>
                                  </styled.div>
                                  <styled.div
                                    begin={true}
                                  >
                                    <div
                                      begin={true}
                                      className="lYNpw"
                                    >
                                      10:59
                                    </div>
                                  </styled.div>
                                  <styled.div
                                    end={true}
                                  >
                                    <div
                                      className="jCERDf"
                                      end={true}
                                    >
                                      18:21
                                    </div>
                                  </styled.div>
                                  <styled.div>
                                    <div
                                      className="fCpcNg"
                                    >
                                      07:22:00
                                    </div>
                                  </styled.div>
                                </div>
                              </styled.div>
                            </div>
                          </BaseRow>
                        </Styled(BaseRow)>
                      </div>
                    </styled.div>
                  </Component>
                  <Component
                    duration={27360}
                    end={2017-02-14T14:59:00.000Z}
                    start={2017-02-14T07:23:00.000Z}
                    total={269.79999999999995}
                  >
                    <styled.div>
                      <div
                        className="jEImSP"
                      >
                        <Styled(BaseRow)
                          contentCells={4}
                        >
                          <BaseRow
                            className="gOOxWv"
                            contentCells={4}
                          >
                            <div
                              className="gOOxWv"
                            >
                              <styled.div>
                                <div
                                  className="dzshZu"
                                >
                                  <styled.div>
                                    <div
                                      className="iwOXrP"
                                    >
                                      Tu. 14. February 2017
                                    </div>
                                  </styled.div>
                                  <styled.div>
                                    <div
                                      className="bwPZOZ"
                                    >
                                      269,80 EUR
                                    </div>
                                  </styled.div>
                                  <styled.div
                                    begin={true}
                                  >
                                    <div
                                      begin={true}
                                      className="lYNpw"
                                    >
                                      08:23
                                    </div>
                                  </styled.div>
                                  <styled.div
                                    end={true}
                                  >
                                    <div
                                      className="jCERDf"
                                      end={true}
                                    >
                                      15:59
                                    </div>
                                  </styled.div>
                                  <styled.div>
                                    <div
                                      className="fCpcNg"
                                    >
                                      07:36:00
                                    </div>
                                  </styled.div>
                                </div>
                              </styled.div>
                            </div>
                          </BaseRow>
                        </Styled(BaseRow)>
                      </div>
                    </styled.div>
                  </Component>
                </section>
              </styled.section>
            </EntryList>
          </section>
        </styled.section>
      </Project>
    </inject-Project-with-rootStore>
  </RouterProvider>
</Provider>
`;
